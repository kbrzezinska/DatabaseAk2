package com.example.databaseproject;

import android.os.Bundle;
import android.widget.ListView;

import androidx.appcompat.app.AppCompatActivity;

import com.couchbase.lite.CouchbaseLiteException;
import com.couchbase.lite.DataSource;
import com.couchbase.lite.Database;
import com.couchbase.lite.DatabaseConfiguration;
import com.couchbase.lite.Document;
import com.couchbase.lite.Expression;
import com.couchbase.lite.LogDomain;
import com.couchbase.lite.MutableDocument;
import com.couchbase.lite.Query;
import com.couchbase.lite.QueryBuilder;
import com.couchbase.lite.Result;
import com.couchbase.lite.ResultSet;
import com.couchbase.lite.SelectResult;

import java.util.List;

public class CouchbaseLiteMenu extends AppCompatActivity {

    private ListView itemsListView;
    private List<String> dataList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_couchbase_lite_display);

        // Get the database (and create it if it doesnâ€™t exist).
        DatabaseConfiguration config = new DatabaseConfiguration(getApplicationContext());
        Database database = null;
        try {
            database = new Database("mydb", config);
        } catch (CouchbaseLiteException e) {
            e.printStackTrace();
        }

// Create a new document (i.e. a record) in the database.
        MutableDocument mutableDoc = new MutableDocument()
                .setString("forename", "Anna");

// Save it to the database.
        try {
            database.save(mutableDoc);
            database.save(new MutableDocument().setString("forename", "Adam"));
            database.save(new MutableDocument().setString("forename", "Anna"));
            database.save(new MutableDocument().setString("forename", "Adam"));
            database.save(new MutableDocument().setString("forename", "Anna"));
        } catch (CouchbaseLiteException e) {
            e.printStackTrace();
        }

//// Update a document.
//        mutableDoc = database.getDocument(mutableDoc.getId()).toMutable();
//        mutableDoc.setString("language", "Java");
//        try {
//            database.save(mutableDoc);
//        } catch (CouchbaseLiteException e) {
//            e.printStackTrace();
//        }
        Document document = database.getDocument(mutableDoc.getId());
// Log the document ID (generated by the database) and properties
        com.couchbase.lite.internal.support.Log.w(LogDomain.ALL, "Document ID :: " + document.getId());
        com.couchbase.lite.internal.support.Log.w(LogDomain.ALL, "forename " + document.getString("forename"));

// Create a query to fetch documents of type SDK.
        Query query = QueryBuilder.select(SelectResult.all())
                .from(DataSource.database(database))
                .where(Expression.property("forename").equalTo(Expression.string("Anna")));
        ResultSet rs = null;
        try {
            List<Result> resultList = query.execute().allResults();
            for(int i = 0; i < resultList.size(); ++i) {
                //Dlaczego null?
                com.couchbase.lite.internal.support.Log.w(LogDomain.ALL, "Results ::  " + resultList.get(i).getString("forename"));
            }

            rs = query.execute();
            for (Result result : rs) {
                //Dlaczego null?
                com.couchbase.lite.internal.support.Log.w(LogDomain.ALL, "Results ::  " + result.getString("forename"));
            }

            com.couchbase.lite.internal.support.Log.w(LogDomain.ALL, "Number of rows ::  " + query.execute().allResults().size());

            database.delete();
        } catch (CouchbaseLiteException e) {
            e.printStackTrace();
        }
    }
}
